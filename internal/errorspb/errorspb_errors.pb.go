// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package errorspb

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// 内部异常，内部崩溃是 UNKNOWN 500，这里默认值也定义为 UNKNOWN 500，认为这是最佳策略
func IsUnknown(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_UNKNOWN.String() && e.Code == 500
}

// 内部异常，内部崩溃是 UNKNOWN 500，这里默认值也定义为 UNKNOWN 500，认为这是最佳策略
func ErrorUnknown(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_UNKNOWN.String(), fmt.Sprintf(format, args...))
}

func IsBadRequest(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_BAD_REQUEST.String() && e.Code == 400
}

func ErrorBadRequest(format string, args ...interface{}) *errors.Error {
	return errors.New(400, ErrorReason_BAD_REQUEST.String(), fmt.Sprintf(format, args...))
}

func IsServerDbError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_SERVER_DB_ERROR.String() && e.Code == 500
}

func ErrorServerDbError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_SERVER_DB_ERROR.String(), fmt.Sprintf(format, args...))
}

func IsServerDbTransactionError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_SERVER_DB_TRANSACTION_ERROR.String() && e.Code == 500
}

func ErrorServerDbTransactionError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_SERVER_DB_TRANSACTION_ERROR.String(), fmt.Sprintf(format, args...))
}
